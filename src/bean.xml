<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       					   http://www.springframework.org/schema/beans/spring-beans.xsd
       					   http://www.springframework.org/schema/aop 
       					   http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 配置service -->
    <bean id="customerService" class="com.itheima.service.impl.CustomerServiceImpl"></bean>
	<!-- 第一步：把通知类交给spring来管理 -->
	<bean id="logger" class="com.itheima.utils.Logger"></bean>
	
	<!-- 第二步：导入aop名称空间，并且使用aop:config开始aop的配置 -->
	<aop:config>
		<!-- 定义通用的切入点表达式，如果写在aop:aspct标签外部，则表示所有切面可用 -->
		<aop:pointcut expression="execution(* com.itheima.service.impl.*.*(..))" id="pt1"/>
		
		<!-- 第三步：使用aop:aspect配置切面  id属性用于给切面提供一个唯一标识。ref属性：用于应用通知Bean的id-->
		<aop:aspect id="logAdvice" ref="logger">
			<!-- 第四步：配置通知的类型，指定增强的方法何时执行。method属性：用于指定增强的方法名称 pointcut属性：用于指定切入点表达式。-->
			<!-- 前置通知 
			<aop:before method="beforePrintLog" pointcut-ref="pt1"/>
			 后置通知 
			<aop:after-returning method="afterReturningPrintLog" pointcut-ref="pt1"/>
			 异常通知
			<aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="pt1"/>
			 最终通知 
			<aop:after method="afterPrintLog" pointcut-ref="pt1"/> -->
			
			<!-- 环绕通知 -->
			<aop:around method="aroundPrintLog" pointcut-ref="pt1"/>
		</aop:aspect>
	</aop:config>
</beans>











